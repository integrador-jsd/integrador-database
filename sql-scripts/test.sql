/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.5 		*/
/*  Created On : 24-may.-2019 10:11:36 p.m. 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */
USE integrador;

SET FOREIGN_KEY_CHECKS=0 
;

/* Drop Tables */

DROP TABLE IF EXISTS `Aula` CASCADE
;

DROP TABLE IF EXISTS `aulas_por_turno` CASCADE
;

DROP TABLE IF EXISTS `Bloque` CASCADE
;

DROP TABLE IF EXISTS `estado_evento` CASCADE
;

DROP TABLE IF EXISTS `estado_solicitud` CASCADE
;

DROP TABLE IF EXISTS `evento` CASCADE
;

DROP TABLE IF EXISTS `historial_evento` CASCADE
;

DROP TABLE IF EXISTS `historial_solicitud` CASCADE
;

DROP TABLE IF EXISTS `historial_usuario` CASCADE
;

DROP TABLE IF EXISTS `item` CASCADE
;

DROP TABLE IF EXISTS `items_por_solicitud` CASCADE
;

DROP TABLE IF EXISTS `Seccional` CASCADE
;

DROP TABLE IF EXISTS `Solicitud` CASCADE
;

DROP TABLE IF EXISTS `tipo_aulas` CASCADE
;

DROP TABLE IF EXISTS `tipo_evento` CASCADE
;

DROP TABLE IF EXISTS `tipo_solicitud` CASCADE
;

DROP TABLE IF EXISTS `tipo_usuario` CASCADE
;

DROP TABLE IF EXISTS `turno` CASCADE
;

DROP TABLE IF EXISTS `usuario` CASCADE
;

/* Create Tables */

CREATE TABLE `Aula`
(
	`id` INT NOT NULL,
	`cod_bloque` INT NOT NULL,
	`cod_seccional` INT NOT NULL,
	`capacidad` INT NULL,
	`tipo` INT NULL,
	CONSTRAINT `PK_Aula` PRIMARY KEY (`id` ASC, `cod_seccional` ASC, `cod_bloque` ASC)
)
COMMENT = 'Espacio en el que se desarrolla un evento, como una clase magistral, reuniones de un semillero de investigaci�n, entre otras.'

;

CREATE TABLE `aulas_por_turno`
(
	`cod_turno` INT NOT NULL,
	`cod_seccional` INT NOT NULL,
	`cod_bloque` INT NOT NULL,
	`cod_aula` INT NOT NULL,
	CONSTRAINT `PK_aulas_por_turno` PRIMARY KEY (`cod_turno` ASC, `cod_seccional` ASC, `cod_bloque` ASC, `cod_aula` ASC)
)

;

CREATE TABLE `Bloque`
(
	`numero` INT NOT NULL,
	`seccional` INT NOT NULL,
	CONSTRAINT `PK_Bloque` PRIMARY KEY (`numero` ASC, `seccional` ASC)
)
COMMENT = 'Espacio f�sico conformado por aulas.'

;

CREATE TABLE `estado_evento`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`nombre` VARCHAR(50) NULL,
	CONSTRAINT `PK_estado_evento` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `estado_solicitud`
(
	`id` INT NOT NULL,
	`estado` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_estado_solicitud` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `evento`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`nombre` VARCHAR(50) NULL,
	`hora_inicio` TIMESTAMP NULL,
	`hora_fin` TIMESTAMP NULL,
	`tipo_evento` INT NULL,
	`cod_seccional` INT NULL,
	`cod_bloque` INT NULL,
	`cod_aula` INT NULL,
	`cod_estado` INT NULL,
	`descripcion` VARCHAR(50) NULL,
	`usuario_responsable` VARCHAR(50) NULL,
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Espacio de tiempo dedicado al desarrollo de actividades acad�micas de un grupo, que se realizan en un aula.'

;

CREATE TABLE `historial_evento`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`cod_evento` INT NULL,
	`fecha_actualizacion` TIMESTAMP NULL,
	`observacion` VARCHAR(50) NULL,
	`usuario_actualizacion` VARCHAR(50) NULL,
	`cod_estado` INT NULL,
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `historial_solicitud`
(
	`id` INT NOT NULL,
	`cod_solicitud` INT NULL,
	`fecha_actualizacion` TIMESTAMP NULL,
	`observacion` VARCHAR(50) NULL,
	`usuario_actualizacion` VARCHAR(50) NULL,
	`cod_estado` VARCHAR(50) NULL,
	CONSTRAINT `PK_historial_solicitud` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `historial_usuario`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`nombre_usuario` VARCHAR(50) NULL,
	`observacion` VARCHAR(50) NULL,
	`fecha_actualizacion` TIMESTAMP NULL,
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Registro de los distintos estados por los que pasa un usuario.'

;

CREATE TABLE `item`
(
	`id` INT NOT NULL,
	`nombre` VARCHAR(50) NULL,
	`cantidad` INT NULL,
	`cod_seccional` INT NULL,
	`cod_bloque` INT NULL,
	`cod_aula` INT NULL,
	CONSTRAINT `PK_item` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Elemento f�sico supervisado por una unidad log�stica que se puede disponer en las aulas o ser prestado particularmente.'

;

CREATE TABLE `items_por_solicitud`
(
	`cod_solicitud` INT NOT NULL,
	`cod_item` INT NOT NULL,
	CONSTRAINT `PK_Table1` PRIMARY KEY (`cod_solicitud` ASC, `cod_item` ASC)
)

;

CREATE TABLE `Seccional`
(
	`id` INT NOT NULL,
	`nombre` VARCHAR(50) NOT NULL,
	`direccion` VARCHAR(50) NULL,
	`telefono` VARCHAR(50) NULL,
	`numero` INT NULL,
	`seccional` INT NULL,
	CONSTRAINT `PK_Seccional` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `Solicitud`
(
	`id` INT NOT NULL,
	`cod_tipo` INT NULL,
	`descripcion` VARCHAR(50) NULL,
	`cod_estado` INT NULL,
	`creador` VARCHAR(50) NULL,
	`fecha_creacion` TIMESTAMP NULL,
	`cod_seccional` INT NULL,
	`cod_bloque` INT NULL,
	`cod_aula` INT NULL,
	`cod_evento` INT NULL,
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `tipo_aulas`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`tipo` VARCHAR(50) NOT NULL,
	`descripcion` VARCHAR(50) NULL,
	CONSTRAINT `PK_tipo_aulas` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Tipo de aulas donde se desarrollan actividades acad�micas  	- Aula 	- Laboratorio 	- Auditorio 	- Taller'

;

CREATE TABLE `tipo_evento`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`tipo` VARCHAR(50) NULL,
	CONSTRAINT `PK_tipo_evento` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Los eventos pueden ser de diferentes tipos  	- Clases normales, agendadas de acuerdo a las demandas de los cursos. 	- Reservas de otro tipo, supongo.'

;

CREATE TABLE `tipo_solicitud`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`tipo` VARCHAR(50) NULL,
	CONSTRAINT `PK_tipo_solicitud` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `tipo_usuario`
(
	`codigo` INT NOT NULL AUTO_INCREMENT,
	`tipo` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_tipo_usuario` PRIMARY KEY (`codigo` ASC)
)
COMMENT = 'Almacena los distintos  tipos de usuario soportados por el sistema:  	- Auxiliar: Persona encargada de supervisar y brindar soporte log�stico a las aulas de una secci�n. Por soporte log�stico se entiende realizar pr�stamos de aulas, abrirlas, cerrarlas o atender las solicitudes que se puedan generar. 	- Unidad log�stica: Entidad encargada de la gesti�n de los auxiliares y sus tareas, horarios y turnos, de las aulas y de los implementos que tiene bajo su potestad. 	- Usuario: Persona que usa la aplicaci�n con el fin de realizar alg�n pr�stamo o solicitar ayuda. ( Persona que requiere un servicio de pr�stamo o ayuda brindado por la unidad log�stica.)'

;

CREATE TABLE `turno`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`hora_inicio` TIMESTAMP NULL,
	`hora_fin` TIMESTAMP NULL,
	`cod_estado` INT NULL,
	`auxiliar` VARCHAR(50) NULL,
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Intervalo de tiempo en el que un auxiliar realiza las tareas que le corresponden, como el monitoreo y apoyo log�stico a la sector que le fue asignada, responder a las solicitudes que se generen durante su turno'

;

CREATE TABLE `usuario`
(
	`nombre_usuario` VARCHAR(50) NOT NULL COMMENT 'Nombre de usuario del portal institucional.',
	`email` VARCHAR(50) NULL COMMENT 'Correo institucional.',
	`unidad` VARCHAR(50) NULL COMMENT 'Unidad log�stica a la que est� asociado el usuario. NULL indica que no est� asociado a ninguna.',
	`tipo_usuario` INT NULL,
	CONSTRAINT `PK_usuario` PRIMARY KEY (`nombre_usuario` ASC)
)
COMMENT = 'Usuario del sistema de informaci�n que puede ser de varios tipos  	- Auxiliar 	- Unidad log�stica 	- Usuario normal'

;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE `Aula` 
 ADD INDEX `IXFK_Aula_Bloque` (`cod_bloque` ASC, `cod_seccional` ASC)
;

ALTER TABLE `Aula` 
 ADD INDEX `IXFK_Aula_tipo_aulas` (`tipo` ASC)
;

ALTER TABLE `aulas_por_turno` 
 ADD INDEX `IXFK_aulas_por_turno_Aula` (`cod_aula` ASC, `cod_seccional` ASC, `cod_bloque` ASC)
;

ALTER TABLE `aulas_por_turno` 
 ADD INDEX `IXFK_aulas_por_turno_turno` (`cod_turno` ASC)
;

ALTER TABLE `Bloque` 
 ADD INDEX `IXFK_Bloque_Seccional` (`seccional` ASC)
;

ALTER TABLE `evento` 
 ADD INDEX `IXFK_evento_Aula` (`cod_aula` ASC, `cod_seccional` ASC, `cod_bloque` ASC)
;

ALTER TABLE `evento` 
 ADD INDEX `IXFK_evento_estado_evento` (`cod_estado` ASC)
;

ALTER TABLE `evento` 
 ADD INDEX `IXFK_evento_tipo_evento` (`tipo_evento` ASC)
;

ALTER TABLE `evento` 
 ADD INDEX `IXFK_evento_usuario` (`usuario_responsable` ASC)
;

ALTER TABLE `historial_evento` 
 ADD INDEX `IXFK_historial_evento_estado_evento` (`cod_estado` ASC)
;

ALTER TABLE `historial_evento` 
 ADD INDEX `IXFK_historial_evento_evento` (`cod_evento` ASC)
;

ALTER TABLE `historial_solicitud` 
 ADD INDEX `IXFK_historial_solicitud_Solicitud` (`cod_solicitud` ASC)
;

ALTER TABLE `historial_solicitud` 
 ADD INDEX `IXFK_historial_solicitud_usuario` (`usuario_actualizacion` ASC)
;

ALTER TABLE `historial_usuario` 
 ADD INDEX `IXFK_historial_usuario_usuario` (`nombre_usuario` ASC)
;

ALTER TABLE `item` 
 ADD INDEX `IXFK_item_Aula` (`cod_aula` ASC, `cod_seccional` ASC, `cod_bloque` ASC)
;

ALTER TABLE `items_por_solicitud` 
 ADD INDEX `IXFK_items_por_solicitud_item` (`cod_item` ASC)
;

ALTER TABLE `items_por_solicitud` 
 ADD INDEX `IXFK_items_por_solicitud_Solicitud` (`cod_solicitud` ASC)
;

ALTER TABLE `Solicitud` 
 ADD INDEX `IXFK_Solicitud_Aula` (`cod_aula` ASC, `cod_seccional` ASC, `cod_bloque` ASC)
;

ALTER TABLE `Solicitud` 
 ADD INDEX `IXFK_Solicitud_estado_solicitud` (`cod_estado` ASC)
;

ALTER TABLE `Solicitud` 
 ADD INDEX `IXFK_Solicitud_evento` (`cod_evento` ASC)
;

ALTER TABLE `Solicitud` 
 ADD INDEX `IXFK_Solicitud_tipo_solicitud` (`cod_tipo` ASC)
;

ALTER TABLE `Solicitud` 
 ADD INDEX `IXFK_Solicitud_usuario` (`creador` ASC)
;

ALTER TABLE `turno` 
 ADD INDEX `IXFK_turno_usuario` (`auxiliar` ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE `Aula` 
 ADD CONSTRAINT `FK_Aula_Bloque`
	FOREIGN KEY (`cod_bloque`, `cod_seccional`) REFERENCES `Bloque` (`numero`,`seccional`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `Aula` 
 ADD CONSTRAINT `FK_Aula_tipo_aulas`
	FOREIGN KEY (`tipo`) REFERENCES `tipo_aulas` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `aulas_por_turno` 
 ADD CONSTRAINT `FK_aulas_por_turno_Aula`
	FOREIGN KEY (`cod_aula`, `cod_seccional`, `cod_bloque`) REFERENCES `Aula` (`id`,`cod_seccional`,`cod_bloque`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `aulas_por_turno` 
 ADD CONSTRAINT `FK_aulas_por_turno_turno`
	FOREIGN KEY (`cod_turno`) REFERENCES `turno` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `Bloque` 
 ADD CONSTRAINT `FK_Bloque_Seccional`
	FOREIGN KEY (`seccional`) REFERENCES `Seccional` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `evento` 
 ADD CONSTRAINT `FK_evento_Aula`
	FOREIGN KEY (`cod_aula`, `cod_seccional`, `cod_bloque`) REFERENCES `Aula` (`id`,`cod_seccional`,`cod_bloque`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `evento` 
 ADD CONSTRAINT `FK_evento_estado_evento`
	FOREIGN KEY (`cod_estado`) REFERENCES `estado_evento` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `evento` 
 ADD CONSTRAINT `FK_evento_tipo_evento`
	FOREIGN KEY (`tipo_evento`) REFERENCES `tipo_evento` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `evento` 
 ADD CONSTRAINT `FK_evento_usuario`
	FOREIGN KEY (`usuario_responsable`) REFERENCES `usuario` (`nombre_usuario`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `historial_evento` 
 ADD CONSTRAINT `FK_historial_evento_estado_evento`
	FOREIGN KEY (`cod_estado`) REFERENCES `estado_evento` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `historial_solicitud` 
 ADD CONSTRAINT `FK_historial_solicitud_Solicitud`
	FOREIGN KEY (`cod_solicitud`) REFERENCES `Solicitud` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `historial_solicitud` 
 ADD CONSTRAINT `FK_historial_solicitud_usuario`
	FOREIGN KEY (`usuario_actualizacion`) REFERENCES `usuario` (`nombre_usuario`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `item` 
 ADD CONSTRAINT `FK_item_Aula`
	FOREIGN KEY (`cod_aula`, `cod_seccional`, `cod_bloque`) REFERENCES `Aula` (`id`,`cod_seccional`,`cod_bloque`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `items_por_solicitud` 
 ADD CONSTRAINT `FK_items_por_solicitud_item`
	FOREIGN KEY (`cod_item`) REFERENCES `item` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `items_por_solicitud` 
 ADD CONSTRAINT `FK_items_por_solicitud_Solicitud`
	FOREIGN KEY (`cod_solicitud`) REFERENCES `Solicitud` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `Solicitud` 
 ADD CONSTRAINT `FK_Solicitud_Aula`
	FOREIGN KEY (`cod_aula`, `cod_seccional`, `cod_bloque`) REFERENCES `Aula` (`id`,`cod_seccional`,`cod_bloque`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `Solicitud` 
 ADD CONSTRAINT `FK_Solicitud_estado_solicitud`
	FOREIGN KEY (`cod_estado`) REFERENCES `estado_solicitud` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `Solicitud` 
 ADD CONSTRAINT `FK_Solicitud_evento`
	FOREIGN KEY (`cod_evento`) REFERENCES `evento` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `Solicitud` 
 ADD CONSTRAINT `FK_Solicitud_tipo_solicitud`
	FOREIGN KEY (`cod_tipo`) REFERENCES `tipo_solicitud` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `Solicitud` 
 ADD CONSTRAINT `FK_Solicitud_usuario`
	FOREIGN KEY (`creador`) REFERENCES `usuario` (`nombre_usuario`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `turno` 
 ADD CONSTRAINT `FK_turno_usuario`
	FOREIGN KEY (`auxiliar`) REFERENCES `usuario` (`nombre_usuario`) ON DELETE Restrict ON UPDATE Restrict
;

SET FOREIGN_KEY_CHECKS=1 
;
